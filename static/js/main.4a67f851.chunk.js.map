{"version":3,"sources":["Dustbin.tsx","Box.tsx","ItemTypes.ts","Vector-1-blue.svg","Vector-2-blue.svg","Vector-3-blue.svg","Vector-4-blue.svg","Vector-5-blue.svg","Dark_2.jpg","Container.tsx","index.tsx"],"names":["style","borderRadius","height","width","marginRight","marginBottom","color","padding","textAlign","fontSize","lineHeight","float","Dustbin","memo","accept","lastDroppedItem","onDrop","useDrop","drop","collect","monitor","isOver","canDrop","isActive","backgroundColor","ref","role","className","join","border","cursor","Box","name","type","src","isDropped","useDrag","item","opacity","isDragging","drag","ItemTypes","Container","useState","accepts","dustbins","setDustbins","Vector1","Vector2","Vector3","Vector4","Vector5","boxes","droppedBoxNames","setDroppedBoxNames","handleDrop","useCallback","index","update","$push","$set","Basemap","overflow","clear","map","position","top","left","boxName","indexOf","App","icon","faMapMarkerAlt","DndProvider","backend","HTML5Backend","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.4a67f851.chunk.js","sourcesContent":["import { CSSProperties, FC, memo } from 'react'\nimport { useDrop } from 'react-dnd'\n\nconst style: CSSProperties = {\n  borderRadius: '50%',\n  height: '100px',\n  width: '100px',\n  marginRight: '1.5rem',\n  marginBottom: '1.5rem',\n  color: 'white',\n  padding: '1rem',\n  textAlign: 'center',\n  fontSize: '1rem',\n  lineHeight: 'normal',\n  float: 'left',\n}\n\nexport interface DustbinProps {\n  accept: string[]\n  lastDroppedItem?: any\n  onDrop: (item: any) => void\n}\n\nexport const Dustbin: FC<DustbinProps> = memo(function Dustbin({\n  accept,\n  lastDroppedItem,\n  onDrop,\n}) {\n  const [{ isOver, canDrop }, drop] = useDrop({\n    accept,\n    drop: onDrop,\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  })\n\n  const isActive = isOver && canDrop\n  let backgroundColor = ''\n  if (isActive) {\n    backgroundColor = '#ff000055'\n  } else if (canDrop) {\n    backgroundColor = '#00000055'\n  }\n\n  return (\n    <div ref={drop} role=\"Dustbin\" style={{ ...style, backgroundColor }} className={accept.join(', ')}>\n      {isActive\n        ? 'Release to drop'\n        : ``}\n\n      {lastDroppedItem && (\n        <div className='dropped'>\n        </div>\n      )}\n    </div>\n  )\n})\n","import { CSSProperties, FC, memo } from 'react'\nimport { useDrag } from 'react-dnd'\n\nconst style: CSSProperties = {\n  border: '1px dashed gray',\n  backgroundColor: 'white',\n  padding: '0.5rem 1rem',\n  marginRight: '1.5rem',\n  marginBottom: '1.5rem',\n  cursor: 'move',\n  float: 'left',\n}\n\nexport interface BoxProps {\n  name: string\n  type: string\n  src: string\n  isDropped: boolean\n}\n\nexport const Box: FC<BoxProps> = memo(function Box({ name, type, src, isDropped }) {\n  const [{ opacity }, drag] = useDrag(\n    () => ({\n      type,\n      item: { name },\n      collect: (monitor) => ({\n        opacity: monitor.isDragging() ? 0.4 : 1,\n      }),\n    }),\n    [name, type],\n  )\n\n  return (\n    <div ref={drag} role=\"Box\" style={{ ...style, opacity }}>\n      {isDropped ? <s>{name}</s> : name}\n      <img src={src} />\n    </div>\n  )\n})\n","export const ItemTypes = {\n  Vector1: 'Vector1',\n  Vector2: 'Vector2',\n  Vector3: 'Vector3',\n  Vector4: 'Vector4',\n  Vector5: 'Vector5',\n}\n","export default __webpack_public_path__ + \"static/media/Vector-1-blue.a9c85cff.svg\";","export default __webpack_public_path__ + \"static/media/Vector-2-blue.f24785b6.svg\";","export default __webpack_public_path__ + \"static/media/Vector-3-blue.413adbaf.svg\";","export default __webpack_public_path__ + \"static/media/Vector-4-blue.ff7d07e9.svg\";","export default __webpack_public_path__ + \"static/media/Vector-5-blue.2189dac4.svg\";","export default __webpack_public_path__ + \"static/media/Dark_2.7a12a72e.jpg\";","import { FC, useState, useCallback, memo } from 'react'\nimport { NativeTypes } from 'react-dnd-html5-backend'\nimport { Dustbin } from './Dustbin'\nimport { Box } from './Box'\nimport { ItemTypes } from './ItemTypes'\nimport Vector1 from './Vector-1-blue.svg'\nimport Vector2 from './Vector-2-blue.svg'\nimport Vector3 from './Vector-3-blue.svg'\nimport Vector4 from './Vector-4-blue.svg'\nimport Vector5 from './Vector-5-blue.svg'\nimport Basemap from './Dark_2.jpg'\nimport update from 'immutability-helper'\n\ninterface DustbinState {\n  accepts: string[]\n  lastDroppedItem: any\n}\n\ninterface BoxState {\n  name: string\n  type: string\n  src: string\n}\n\nexport interface DustbinSpec {\n  accepts: string[]\n  lastDroppedItem: any\n}\nexport interface BoxSpec {\n  name: string\n  type: string\n  src: string\n}\nexport interface ContainerState {\n  droppedBoxNames: string[]\n  dustbins: DustbinSpec[]\n  boxes: BoxSpec[]\n}\n\nexport const Container: FC = memo(function Container() {\n  const [dustbins, setDustbins] = useState<DustbinState[]>([\n    { accepts: [ItemTypes.Vector1], lastDroppedItem: null },\n    { accepts: [ItemTypes.Vector2], lastDroppedItem: null },\n    {\n      accepts: [ItemTypes.Vector3],\n      lastDroppedItem: null,\n    },\n    { accepts: [ItemTypes.Vector4], lastDroppedItem: null },\n    { accepts: [ItemTypes.Vector5], lastDroppedItem: null },\n  ])\n\n  const [boxes] = useState<BoxState[]>([\n    { name: 'Vector 1', src: Vector1, type: ItemTypes.Vector1 },\n    { name: 'Vector-2', src: Vector2, type: ItemTypes.Vector2 },\n    { name: 'Vector-3', src: Vector3, type: ItemTypes.Vector3 },\n    { name: 'Vector-4', src: Vector4, type: ItemTypes.Vector4 },\n    { name: 'Vector-5', src: Vector5, type: ItemTypes.Vector5 },\n  ])\n\n  const [droppedBoxNames, setDroppedBoxNames] = useState<string[]>([])\n\n  function isDropped(boxName: string) {\n    return droppedBoxNames.indexOf(boxName) > -1\n  }\n\n  const handleDrop = useCallback(\n    (index: number, item: { name: string }) => {\n      const { name } = item\n      setDroppedBoxNames(\n        update(droppedBoxNames, name ? { $push: [name] } : { $push: [] }),\n      )\n      setDustbins(\n        update(dustbins, {\n          [index]: {\n            lastDroppedItem: {\n              $set: item,\n            },\n          },\n        }),\n      )\n    },\n    [droppedBoxNames, dustbins],\n  )\n\n  return (\n    <div>\n      <div className=\"map-container\">\n        <img src={Basemap} className=\"map\" />\n        <div style={{ overflow: 'hidden', clear: 'both' }}>\n          {dustbins.map(({ accepts, lastDroppedItem }, index) => (\n            <Dustbin\n              accept={accepts}\n              lastDroppedItem={lastDroppedItem}\n              onDrop={(item) => handleDrop(index, item)}\n              key={index}\n            />\n          ))}\n        </div>\n        <div style={{ overflow: 'hidden', clear: 'both', position: 'absolute', top: 0, left: 0, width: 300 }}>\n          {boxes.map(({ name, type, src }, index) => (\n            <Box\n              name={name}\n              type={type}\n              src={src}\n              isDropped={isDropped(name)}\n              key={index}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n})\n","\n\timport { render } from 'react-dom'\n\timport Example from './example'\n\timport { DndProvider } from 'react-dnd'\n\timport { HTML5Backend } from 'react-dnd-html5-backend'\n  import { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\n  import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n  \n\tfunction App() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n        <h1>\n          Like a L<FontAwesomeIcon icon={faMapMarkerAlt} />cal\n        </h1>\n\t\t\t\t<DndProvider backend={HTML5Backend}>\n\t\t\t\t\t<Example />\n\t\t\t\t</DndProvider>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst rootElement = document.getElementById('root')\n\trender(<App />, rootElement)\n"],"sourceRoot":""}